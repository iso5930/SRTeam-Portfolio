/*!
 * \file Common_KeyStates.h
 * \date 2016/06/09 21:47
 *
 * \author 박정민
 * Contact: user@company.com
 *
 * \brief 
 *
 * TODO: long description
 *
 * \note
*/

#ifndef Common_KeyStates_h__
#define Common_KeyStates_h__

typedef struct tagKeyState
{
	DWORD map[4];

	tagKeyState& operator |=(const tagKeyState& _tKeyState)
	{
		for (int i = 0; i < 4; ++i)
		{
			map[i] |= _tKeyState.map[i];
		}

		return *this;
	}

	tagKeyState operator &(const tagKeyState& _tKeyState) const
	{
		tagKeyState tTemp;
		for (int i = 0; i < 4; ++i)
		{
			tTemp.map[i] = map[i] & _tKeyState.map[i];
		}

		return tTemp;
	}

	bool operator ==(const tagKeyState& _tKeyState) const
	{
		for (int i = 0; i < 4; ++i)
		{
			if (map[i] != _tKeyState.map[i])
				return false;
		}

		return true;
	}

	bool operator !=(const tagKeyState& _tKeyState) const
	{
		for (int i = 0; i < 4; ++i)
		{
			if (map[i] != _tKeyState.map[i])
				return true;
		}

		return false;
	}

	explicit tagKeyState(void)
	{
		memset(map, 0, sizeof(DWORD) * 4);
	}
	explicit tagKeyState(DWORD _0, DWORD _1, DWORD _2, DWORD _3)
	{
		map[0] = _0;
		map[1] = _1;
		map[2] = _2;
		map[3] = _3;
	}

} KEY_STATE;

// 키 상태 없음. 비교연산에 필수이므로 건들지 마시요.
const KEY_STATE KEY_STATE_NO		(0x00000000, 0x00000000, 0x00000000, 0x00000000);
// mouse
const KEY_STATE KEY_STATE_LBUTTON	(0x00000000, 0x00000000, 0x00000000, 0x00000001);
const KEY_STATE KEY_STATE_RBUTTON	(0x00000000, 0x00000000, 0x00000000, 0x00000002);
// enter, esc
const KEY_STATE KEY_STATE_RETURN	(0x00000000, 0x00000000, 0x00000000, 0x00000004);
const KEY_STATE KEY_STATE_ESCAPE	(0x00000000, 0x00000000, 0x00000000, 0x00000008);
// 화살표
const KEY_STATE KEY_STATE_UP		(0x00000000, 0x00000000, 0x00000000, 0x00000010);
const KEY_STATE KEY_STATE_DOWN		(0x00000000, 0x00000000, 0x00000000, 0x00000020);
const KEY_STATE KEY_STATE_LEFT		(0x00000000, 0x00000000, 0x00000000, 0x00000040);
const KEY_STATE KEY_STATE_RIGHT		(0x00000000, 0x00000000, 0x00000000, 0x00000080);
// F1 ~ F12
const KEY_STATE KEY_STATE_F1		(0x00000000, 0x00000000, 0x00000000, 0x00000100);
const KEY_STATE KEY_STATE_F2		(0x00000000, 0x00000000, 0x00000000, 0x00000200);
const KEY_STATE KEY_STATE_F3		(0x00000000, 0x00000000, 0x00000000, 0x00000400);
const KEY_STATE KEY_STATE_F4		(0x00000000, 0x00000000, 0x00000000, 0x00000800);
const KEY_STATE KEY_STATE_F5		(0x00000000, 0x00000000, 0x00000000, 0x00001000);
const KEY_STATE KEY_STATE_F6		(0x00000000, 0x00000000, 0x00000000, 0x00002000);
const KEY_STATE KEY_STATE_F7		(0x00000000, 0x00000000, 0x00000000, 0x00004000);
const KEY_STATE KEY_STATE_F8		(0x00000000, 0x00000000, 0x00000000, 0x00008000);
const KEY_STATE KEY_STATE_F9		(0x00000000, 0x00000000, 0x00000000, 0x00010000);
const KEY_STATE KEY_STATE_F10		(0x00000000, 0x00000000, 0x00000000, 0x00020000);
const KEY_STATE KEY_STATE_F11		(0x00000000, 0x00000000, 0x00000000, 0x00040000);
const KEY_STATE KEY_STATE_F12		(0x00000000, 0x00000000, 0x00000000, 0x00080000);
// 1 ~ 0
const KEY_STATE KEY_STATE_1			(0x00000000, 0x00000000, 0x00000000, 0x00100000);
const KEY_STATE KEY_STATE_2			(0x00000000, 0x00000000, 0x00000000, 0x00200000);
const KEY_STATE KEY_STATE_3			(0x00000000, 0x00000000, 0x00000000, 0x00400000);
const KEY_STATE KEY_STATE_4			(0x00000000, 0x00000000, 0x00000000, 0x00800000);
const KEY_STATE KEY_STATE_5			(0x00000000, 0x00000000, 0x00000000, 0x01000000);
const KEY_STATE KEY_STATE_6			(0x00000000, 0x00000000, 0x00000000, 0x02000000);
const KEY_STATE KEY_STATE_7			(0x00000000, 0x00000000, 0x00000000, 0x04000000);
const KEY_STATE KEY_STATE_8			(0x00000000, 0x00000000, 0x00000000, 0x08000000);
const KEY_STATE KEY_STATE_9			(0x00000000, 0x00000000, 0x00000000, 0x10000000);
const KEY_STATE KEY_STATE_0			(0x00000000, 0x00000000, 0x00000000, 0x20000000);
// A ~ Z (qwerty)
const KEY_STATE KEY_STATE_Q			(0x00000000, 0x00000000, 0x00000000, 0x40000000);
const KEY_STATE KEY_STATE_W			(0x00000000, 0x00000000, 0x00000000, 0x80000000);
const KEY_STATE KEY_STATE_E			(0x00000000, 0x00000000, 0x00000001, 0x00000000);
const KEY_STATE KEY_STATE_R			(0x00000000, 0x00000000, 0x00000002, 0x00000000);
const KEY_STATE KEY_STATE_T			(0x00000000, 0x00000000, 0x00000004, 0x00000000);
const KEY_STATE KEY_STATE_Y			(0x00000000, 0x00000000, 0x00000008, 0x00000000);
const KEY_STATE KEY_STATE_U			(0x00000000, 0x00000000, 0x00000010, 0x00000000);
const KEY_STATE KEY_STATE_I			(0x00000000, 0x00000000, 0x00000020, 0x00000000);
const KEY_STATE KEY_STATE_O			(0x00000000, 0x00000000, 0x00000040, 0x00000000);
const KEY_STATE KEY_STATE_P			(0x00000000, 0x00000000, 0x00000080, 0x00000000);
const KEY_STATE KEY_STATE_A			(0x00000000, 0x00000000, 0x00000100, 0x00000000);
const KEY_STATE KEY_STATE_S			(0x00000000, 0x00000000, 0x00000200, 0x00000000);
const KEY_STATE KEY_STATE_D			(0x00000000, 0x00000000, 0x00000400, 0x00000000);
const KEY_STATE KEY_STATE_F			(0x00000000, 0x00000000, 0x00000800, 0x00000000);
const KEY_STATE KEY_STATE_G			(0x00000000, 0x00000000, 0x00001000, 0x00000000);
const KEY_STATE KEY_STATE_H			(0x00000000, 0x00000000, 0x00002000, 0x00000000);
const KEY_STATE KEY_STATE_J			(0x00000000, 0x00000000, 0x00004000, 0x00000000);
const KEY_STATE KEY_STATE_K			(0x00000000, 0x00000000, 0x00008000, 0x00000000);
const KEY_STATE KEY_STATE_L			(0x00000000, 0x00000000, 0x00010000, 0x00000000);
const KEY_STATE KEY_STATE_Z			(0x00000000, 0x00000000, 0x00020000, 0x00000000);
const KEY_STATE KEY_STATE_X			(0x00000000, 0x00000000, 0x00040000, 0x00000000);
const KEY_STATE KEY_STATE_C			(0x00000000, 0x00000000, 0x00080000, 0x00000000);
const KEY_STATE KEY_STATE_V			(0x00000000, 0x00000000, 0x00100000, 0x00000000);
const KEY_STATE KEY_STATE_B			(0x00000000, 0x00000000, 0x00200000, 0x00000000);
const KEY_STATE KEY_STATE_N			(0x00000000, 0x00000000, 0x00400000, 0x00000000);
const KEY_STATE KEY_STATE_M			(0x00000000, 0x00000000, 0x00800000, 0x00000000);

const KEY_STATE KEY_STATE_SPACE		(0x00000000, 0x00000000, 0x01000000, 0x00000000);
const KEY_STATE KEY_STATE_LALT		(0x00000000, 0x00000000, 0x02000000, 0x00000000);
const KEY_STATE KEY_STATE_LCTRL		(0x00000000, 0x00000000, 0x04000000, 0x00000000);
const KEY_STATE KEY_STATE_LSHIFT	(0x00000000, 0x00000000, 0x08000000, 0x00000000);

#endif // Common_KeyStates_h__
